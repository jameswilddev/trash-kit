import * as typeScript from 'typescript'

const output: typeScript.CompilerOptions = {
  allowJs: false,
  allowSyntheticDefaultImports: false,
  allowUmdGlobalAccess: false,
  allowUnreachableCode: false,
  allowUnusedLabels: false,
  alwaysStrict: true,
  baseUrl: './',
  checkJs: false,
  composite: false,
  declaration: true,
  declarationDir: './',
  declarationMap: false,
  disableReferencedProjectLoad: true,
  disableSolutionSearching: true,
  disableSourceOfProjectReferenceRedirect: true,
  downlevelIteration: true,
  emitBOM: false,
  emitDeclarationOnly: false,
  emitDecoratorMetadata: false,
  esModuleInterop: false,
  exactOptionalPropertyTypes: true,
  experimentalDecorators: false,
  forceConsistentCasingInFileNames: true,
  importHelpers: false,
  // "incremental": false,
  inlineSourceMap: false,
  inlineSources: false,
  isolatedModules: false,
  jsx: typeScript.JsxEmit.Preserve,
  keyofStringsOnly: false,
  lib: [
    'es2018'
  ],
  mapRoot: '',
  maxNodeModuleJsDepth: 0,
  module: typeScript.ModuleKind.CommonJS,
  moduleResolution: typeScript.ModuleResolutionKind.Node16,
  moduleSuffixes: [],
  newLine: typeScript.NewLineKind.LineFeed,
  noEmit: true,
  noEmitHelpers: true,
  noEmitOnError: true,
  noFallthroughCasesInSwitch: true,
  noImplicitAny: true,
  noImplicitOverride: true,
  noImplicitReturns: true,
  noImplicitThis: true,
  noLib: false,
  noPropertyAccessFromIndexSignature: true,
  noResolve: false,
  noUncheckedIndexedAccess: true,
  noUnusedLocals: true,
  noUnusedParameters: true,
  preserveConstEnums: false,
  preserveSymlinks: false,
  preserveWatchOutput: true,
  pretty: true,
  removeComments: true,
  resolveJsonModule: true,
  skipDefaultLibCheck: false,
  skipLibCheck: false,
  sourceMap: false,
  strict: true,
  strictBindCallApply: true,
  strictFunctionTypes: true,
  strictNullChecks: true,
  strictPropertyInitialization: true,
  stripInternal: true,
  target: typeScript.ScriptTarget.ES2018,
  typeRoots: [],
  types: [
    'node'
  ],
  useDefineForClassFields: true,
  useUnknownInCatchVariables: true
}

export default output
